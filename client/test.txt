#include <iostream>
#include <sstream>
#include<unistd.h>
#include<string>
#include<cstring>
#include<stdio.h>
#include<cstdlib>
#include<stdlib.h>
#include<sys/wait.h>
#include<pthread.h>
#include<vector>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h> 
#include <arpa/inet.h>
using namespace std;

int main()
{
int server_fd = socket (AF_INET, SOCK_STREAM, 0);

struct sockaddr_in   addr;
struct sockaddr_in address;
bzero(&addr, sizeof(addr));
bzero(&address, sizeof(address));
addr.sin_family = AF_INET;
addr.sin_port = htons(10010);
addr.sin_addr.s_addr=inet_addr("127.0.0.1");

int addrlen = sizeof(sockaddr_in);
//cout<<"addrlen "<<addrlen<<endl;
bind (server_fd  , (struct sockaddr *)&addr , sizeof ( addr ) );
int l=listen (server_fd, 3);
cout<<"l "<<l<<endl;
int sockfd = accept(server_fd , (struct sockaddr *)&address , (socklen_t*)&addrlen);
cout<<"sockfd "<<sockfd<<endl;
//while(1)
//{

FILE *fp = fopen ( "test.txt"  , "wb" );
char Buffer [512] ; 
int file_size;

recv(sockfd, &file_size, sizeof(file_size), 0);
int n=0;
while ( ( n = recv( sockfd , Buffer ,   sizeof(Buffer), 0) ) > 0  &&  file_size > 0){
	
fwrite (Buffer , sizeof (char), n, fp);
	memset ( Buffer , '\0', sizeof(Buffer));
file_size = file_size - n;
} 
fclose ( fp );
//}
close( sockfd);
close( server_fd);
return 0;
}
